apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-frontend
  template:
    metadata:
      labels:
        app: web-frontend
    spec:
      containers:
      - name: web-frontend
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: web-content
          mountPath: /usr/share/nginx/html
      volumes:
      - name: web-content
        configMap:
          name: web-frontend-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-frontend-config
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>Transaction Entry</title>
    </head>
    <body>
      <h1>Enter Transaction</h1>
      <form id="transactionForm">
        <label>Event ID:</label><input type="text" id="event_id" /><br />
        <label>Timestamp:</label><input type="text" id="timestamp" /><br />
        <label>User:</label><input type="text" id="user" /><br />
        <label>Item ID:</label><input type="text" id="item_id" /><br />
        <button type="submit">Submit</button>
      </form>
      <script>
        document.getElementById('transactionForm').onsubmit = async function(e) {
          e.preventDefault();
          const event_id = document.getElementById('event_id').value;
          const timestamp = document.getElementById('timestamp').value;
          const user = document.getElementById('user').value;
          const item_id = document.getElementById('item_id').value;

          const response = await fetch('/transaction', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ event_id, timestamp, user, item_id })
          });

          if (response.ok) {
            alert('Transaction Submitted');
          } else {
            alert('Error submitting transaction');
          }
        };
      </script>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: web-frontend
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30001
  selector:
    app: web-frontend
